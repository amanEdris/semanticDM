/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fi.jyu.semantic.ui;

import fi.jyu.csv.CSVParser;
import fi.jyu.ontology.OntologyManager;
import fi.jyu.transform.PMMLToRule;
import fi.jyu.transform.CsvToOntology;
import fi.jyu.translate.RuleToSWRL;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.xml.transform.TransformerFactoryConfigurationError;
import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;
import org.semanticweb.owlapi.model.SWRLRule;

/**
 *
 * @author edris
 */
public class SemanticDM extends javax.swing.JFrame {

    /**
     * Creates new form SemanticDMui
     */
    public SemanticDM() {
        initComponents();
        OntologyNameSpace.setText("http://org.semanticweb.datarangeexample/");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientInfoPane = new javax.swing.JTabbedPane();
        personalPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        CsvTextField = new javax.swing.JTextField();
        surnameLabel = new javax.swing.JLabel();
        OntologyTextField = new javax.swing.JTextField();
        maritalStatusLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        csvButton = new javax.swing.JButton();
        ontologyButton = new javax.swing.JButton();
        generateOntoButton = new javax.swing.JButton();
        yesRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        surnameLabel1 = new javax.swing.JLabel();
        OntologyNameSpace = new javax.swing.JTextField();
        jProgressBar1 = new javax.swing.JProgressBar();
        progress = new javax.swing.JLabel();
        Namespace = new javax.swing.JLabel();
        OntologyNameTextField1 = new javax.swing.JTextField();
        contactPanel = new javax.swing.JPanel();
        nicknameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        pmmlTextField = new javax.swing.JTextField();
        ontologyVarTextField = new javax.swing.JTextField();
        ontologySwrlButton = new javax.swing.JButton();
        pmmlButton = new javax.swing.JButton();
        generateSWRLbutton = new javax.swing.JButton();
        jProgressBar2 = new javax.swing.JProgressBar();
        swrlProgreessLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        jMenuHelpItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        personalPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        firstNameLabel.setText("CSV File path:"); // NOI18N

        surnameLabel.setText("Ontology save Directory:"); // NOI18N

        maritalStatusLabel.setText("Create literal properties"); // NOI18N

        csvButton.setText("Select");
        csvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvButtonActionPerformed(evt);
            }
        });

        ontologyButton.setText("Select");
        ontologyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ontologyButtonActionPerformed(evt);
            }
        });

        generateOntoButton.setText("Generate ontology");
        generateOntoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateOntoButtonActionPerformed(evt);
            }
        });

        yesRadioButton.setText("yes"); // NOI18N

        femaleRadioButton.setText("no"); // NOI18N

        surnameLabel1.setText("Ontology domain"); // NOI18N

        progress.setText(".");

        Namespace.setText("Ontology Namespace"); // NOI18N

        org.jdesktop.layout.GroupLayout personalPanelLayout = new org.jdesktop.layout.GroupLayout(personalPanel);
        personalPanel.setLayout(personalPanelLayout);
        personalPanelLayout.setHorizontalGroup(
            personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(personalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(personalPanelLayout.createSequentialGroup()
                        .add(surnameLabel1)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(personalPanelLayout.createSequentialGroup()
                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(maritalStatusLabel)
                                .add(firstNameLabel)
                                .add(surnameLabel)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, progress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(Namespace))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(personalPanelLayout.createSequentialGroup()
                                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(personalPanelLayout.createSequentialGroup()
                                        .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(generateOntoButton))
                                    .add(personalPanelLayout.createSequentialGroup()
                                        .add(ageLabel)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(personalPanelLayout.createSequentialGroup()
                                                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(OntologyTextField)
                                                    .add(CsvTextField))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(csvButton)
                                                    .add(ontologyButton)))
                                            .add(OntologyNameTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                                            .add(OntologyNameSpace))))
                                .add(74, 74, 74))
                            .add(personalPanelLayout.createSequentialGroup()
                                .add(yesRadioButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(femaleRadioButton)
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        personalPanelLayout.setVerticalGroup(
            personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(personalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(firstNameLabel)
                    .add(CsvTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(csvButton))
                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(personalPanelLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(surnameLabel)
                            .add(ontologyButton))
                        .add(10, 10, 10)
                        .add(surnameLabel1)
                        .add(41, 41, 41)
                        .add(ageLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(personalPanelLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE)
                        .add(OntologyTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(OntologyNameTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, personalPanelLayout.createSequentialGroup()
                                .add(Namespace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, personalPanelLayout.createSequentialGroup()
                                .add(OntologyNameSpace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(30, 30, 30)))
                        .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(maritalStatusLabel)
                            .add(yesRadioButton)
                            .add(femaleRadioButton))
                        .add(18, 18, 18)))
                .add(personalPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(generateOntoButton)
                    .add(progress))
                .add(22, 22, 22))
        );

        clientInfoPane.addTab("Ontology Generator", personalPanel);

        contactPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        nicknameLabel.setText("PMML File Path"); // NOI18N

        emailLabel.setText("Domain Ontology File Path"); // NOI18N

        ontologySwrlButton.setText("Select");
        ontologySwrlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ontologySwrlButtonActionPerformed(evt);
            }
        });

        pmmlButton.setText("Select");
        pmmlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmmlButtonActionPerformed(evt);
            }
        });

        generateSWRLbutton.setText("Generate SWRL");
        generateSWRLbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateSWRLbuttonActionPerformed(evt);
            }
        });

        swrlProgreessLabel.setText(",");

        messageLabel.setText(".");

        org.jdesktop.layout.GroupLayout contactPanelLayout = new org.jdesktop.layout.GroupLayout(contactPanel);
        contactPanel.setLayout(contactPanelLayout);
        contactPanelLayout.setHorizontalGroup(
            contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(contactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, contactPanelLayout.createSequentialGroup()
                        .add(119, 119, 119)
                        .add(swrlProgreessLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jProgressBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 131, Short.MAX_VALUE)
                        .add(generateSWRLbutton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, contactPanelLayout.createSequentialGroup()
                        .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(nicknameLabel)
                            .add(emailLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(pmmlTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                            .add(ontologyVarTextField))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(pmmlButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .add(ontologySwrlButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .add(contactPanelLayout.createSequentialGroup()
                .add(153, 153, 153)
                .add(messageLabel))
        );
        contactPanelLayout.setVerticalGroup(
            contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(contactPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nicknameLabel)
                    .add(pmmlTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pmmlButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(emailLabel)
                    .add(ontologyVarTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ontologySwrlButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(contactPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(generateSWRLbutton)
                        .add(jProgressBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(swrlProgreessLabel))
                .add(74, 74, 74)
                .add(messageLabel)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        clientInfoPane.addTab("SWRL Generator", contactPanel);

        fileMenu.setMnemonic('F');
        fileMenu.setText("File");

        aboutMenuItem.setMnemonic('A');
        aboutMenuItem.setText("About");
        aboutMenuItem.setToolTipText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(aboutMenuItem);

        jMenuHelpItem.setText("Help");
        jMenuHelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpItemActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuHelpItem);

        exitMenuItem.setMnemonic('E');
        exitMenuItem.setText("Exit");
        exitMenuItem.setToolTipText("Quit Team, Quit!");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenu.add(fileMenu);

        setJMenuBar(mainMenu);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 675, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(clientInfoPane)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 361, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(13, 13, 13)
                    .add(clientInfoPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void csvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        int option = chooser.showOpenDialog(SemanticDM.this);

        if (option == JFileChooser.APPROVE_OPTION) {
            CsvTextField.setText(((chooser.getSelectedFile() != null)
                    ? chooser.getSelectedFile().getPath() : "nothing"));
        } else {
//            CsvTextField.setText("You canceled");
    }//GEN-LAST:event_csvButtonActionPerformed
    }
    private void ontologyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ontologyButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int option = chooser.showOpenDialog(SemanticDM.this);

        if (option == JFileChooser.APPROVE_OPTION) {
            OntologyTextField.setText(((chooser.getSelectedFile() != null)
                    ? chooser.getCurrentDirectory().getPath() : "nothing"));
        } else {
//            OntologyTextField.setText("You canceled");
    }//GEN-LAST:event_ontologyButtonActionPerformed
    }
    private void ontologySwrlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ontologySwrlButtonActionPerformed

        JFileChooser chooser = new JFileChooser();
        int option = chooser.showOpenDialog(SemanticDM.this);
        if (option == JFileChooser.APPROVE_OPTION) {
            ontologyVarTextField.setText(((chooser.getSelectedFile() != null)
                    ? chooser.getSelectedFile().getPath() : "nothing"));
        } else {
//            ontologyVarTextField.setText("You canceled");
        }
    }//GEN-LAST:event_ontologySwrlButtonActionPerformed

    private void pmmlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmmlButtonActionPerformed

        JFileChooser chooser = new JFileChooser();
        int option = chooser.showOpenDialog(SemanticDM.this);
        if (option == JFileChooser.APPROVE_OPTION) {
            pmmlTextField.setText(((chooser.getSelectedFile() != null)
                    ? chooser.getSelectedFile().getPath() : "nothing"));
        } else {
//            pmmlTextField.setText("You canceled");
        }
    }//GEN-LAST:event_pmmlButtonActionPerformed

    private void generateOntoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateOntoButtonActionPerformed
        try {
            
            jProgressBar1.setValue(0);
            jProgressBar1.setForeground(Color.GRAY);
            String base = OntologyNameSpace.getText();
            int classColumn = 15;//Users/edris/Desktop/onto_test/adult.csv
            
            long t0 = System.currentTimeMillis();
            CSVParser csvClass = new CSVParser(CsvTextField.getText());
            OntologyManager manager = new OntologyManager();
            manager.setManager(OWLManager.createOWLOntologyManager());
            manager.setFactory(OWLManager.getOWLDataFactory());
            manager.setNameSpace(base);
            manager.createOntology();
            jProgressBar1.setIndeterminate(true);
            CsvToOntology csvToontology = new CsvToOntology();
            csvToontology.createOntologyClass(csvClass, manager);
            if (yesRadioButton.isSelected()) {
                csvToontology.createLiteralProperty(manager, csvClass);
            }
            File fileformated = new File(OntologyTextField.getText() + "/" + OntologyTextField.getText() + ".owl");
            manager.saveOntology(OntologyTextField.getText() + "/" + OntologyNameTextField1.getText() + ".owl");
            progress.setText("100%");
            long t1 = System.currentTimeMillis();
	    messageLabel.setText( "ontology generation time in "+(t1-t0)+" msec." );   
            jProgressBar1.setValue(100);
            jProgressBar1.setIndeterminate(false);

            manager.checkConsistency();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SemanticDM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (OWLOntologyCreationException ex) {
            Logger.getLogger(SemanticDM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (OWLOntologyStorageException ex) {
            Logger.getLogger(SemanticDM.class.getName()).log(Level.SEVERE, null, ex);
        }



    }//GEN-LAST:event_generateOntoButtonActionPerformed

    private void generateSWRLbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateSWRLbuttonActionPerformed
        jProgressBar1.setValue(0);
        swrlProgreessLabel.setText("0%");
        messageLabel.setBackground(Color.WHITE);
        messageLabel.setForeground(Color.RED);

        messageLabel.setText("");
        try {
            long t0 = System.currentTimeMillis();
            PMMLToRule ptor = new PMMLToRule(pmmlTextField.getText());
            String ruleXml = ptor.Transform();
            String ontologyPath = ontologyVarTextField.getText();
            RuleToSWRL ruleToSWRL = new RuleToSWRL(ruleXml);
            OntologyManager manager = new OntologyManager();
            manager.readOntology(ontologyPath);
            jProgressBar2.setIndeterminate(true);

            ruleToSWRL.setManager(manager.getManager());
            ruleToSWRL.setFactory(manager.getFactory());
            ruleToSWRL.setDomainOntology(manager.getOntology());
            ruleToSWRL.constructOntologyVocabulary();
            Set<SWRLRule> rules = ruleToSWRL.translate();
            manager.setOntologyWithRules(rules);
            manager.saveOntology(ontologyPath);
            long t1 = System.currentTimeMillis();
            messageLabel.setText( "SWRL Done in "+(t1-t0)+" msec." );   
            jProgressBar2.setValue(100);
            jProgressBar2.setIndeterminate(false);
            //+(t1 - t0)+"Seconds"
            swrlProgreessLabel.setText("100%");

        } catch (TransformerFactoryConfigurationError ex) {
            messageLabel.setText(ex.getLocalizedMessage());
        } catch (Exception ex) {
            messageLabel.setText(ex.getMessage());
        }
    }//GEN-LAST:event_generateSWRLbuttonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        new About(this).setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuHelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpItemActionPerformed
        new Help(this).setVisible(true);
    }//GEN-LAST:event_jMenuHelpItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SemanticDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SemanticDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SemanticDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SemanticDM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SemanticDM().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CsvTextField;
    private javax.swing.JLabel Namespace;
    private javax.swing.JTextField OntologyNameSpace;
    private javax.swing.JTextField OntologyNameTextField1;
    private javax.swing.JTextField OntologyTextField;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTabbedPane clientInfoPane;
    private javax.swing.JPanel contactPanel;
    private javax.swing.JButton csvButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JButton generateOntoButton;
    private javax.swing.JButton generateSWRLbutton;
    private javax.swing.JMenuItem jMenuHelpItem;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JLabel maritalStatusLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel nicknameLabel;
    private javax.swing.JButton ontologyButton;
    private javax.swing.JButton ontologySwrlButton;
    private javax.swing.JTextField ontologyVarTextField;
    private javax.swing.JPanel personalPanel;
    private javax.swing.JButton pmmlButton;
    private javax.swing.JTextField pmmlTextField;
    private javax.swing.JLabel progress;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JLabel surnameLabel1;
    private javax.swing.JLabel swrlProgreessLabel;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables
}
